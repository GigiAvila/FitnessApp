import {
  require_react_dom
} from "./chunk-HOONJUPS.js";
import {
  require_prop_types
} from "./chunk-6IJE4OMF.js";
import "./chunk-AAY5IJNO.js";
import {
  require_react
} from "./chunk-ZGRSIX2Q.js";
import {
  __commonJS
} from "./chunk-ROME4SDB.js";

// node_modules/react-media-player/lib/context-types.js
var require_context_types = __commonJS({
  "node_modules/react-media-player/lib/context-types.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = {
      media: _propTypes2.default.object,
      _mediaSetters: _propTypes2.default.object,
      _mediaGetters: _propTypes2.default.object
    };
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/utils/request-fullscreen.js
var require_request_fullscreen = __commonJS({
  "node_modules/react-media-player/lib/utils/request-fullscreen.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = function() {
      if (typeof document === "undefined") {
        return function() {
        };
      }
      var names = ["requestFullscreen", "mozRequestFullScreen", "msRequestFullscreen", "webkitRequestFullscreen"];
      return names.reduce(function(prev, curr) {
        return document.documentElement[curr] ? curr : prev;
      });
    }();
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/utils/exit-fullscreen.js
var require_exit_fullscreen = __commonJS({
  "node_modules/react-media-player/lib/utils/exit-fullscreen.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = function() {
      if (typeof document === "undefined") {
        return function() {
        };
      }
      var names = ["exitFullscreen", "mozCancelFullScreen", "msExitFullscreen", "webkitExitFullscreen"];
      return names.reduce(function(prev, curr) {
        return document[curr] ? curr : prev;
      });
    }();
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/utils/fullscreen-change.js
var require_fullscreen_change = __commonJS({
  "node_modules/react-media-player/lib/utils/fullscreen-change.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = fullscreenChange;
    function fullscreenChange(type, callback) {
      var vendors = ["fullscreenchange", "mozfullscreenchange", "MSFullscreenChange", "webkitfullscreenchange"];
      vendors.forEach(function(vendor) {
        return document[type + "EventListener"](vendor, callback);
      });
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/Media.js
var require_Media = __commonJS({
  "node_modules/react-media-player/lib/Media.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _reactDom = require_react_dom();
    var _reactDom2 = _interopRequireDefault(_reactDom);
    var _contextTypes = require_context_types();
    var _contextTypes2 = _interopRequireDefault(_contextTypes);
    var _requestFullscreen = require_request_fullscreen();
    var _requestFullscreen2 = _interopRequireDefault(_requestFullscreen);
    var _exitFullscreen = require_exit_fullscreen();
    var _exitFullscreen2 = _interopRequireDefault(_exitFullscreen);
    var _fullscreenChange = require_fullscreen_change();
    var _fullscreenChange2 = _interopRequireDefault(_fullscreenChange);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var MEDIA_EVENTS = {
      onPlay: "isPlaying",
      onPause: "isPlaying",
      onDuration: "duration",
      onProgress: "progress",
      onTimeUpdate: "currentTime",
      onMute: "isMuted",
      onVolumeChange: "volume",
      onError: null
    };
    var MEDIA_EVENTS_KEYS = Object.keys(MEDIA_EVENTS);
    var Media = function(_Component) {
      _inherits(Media2, _Component);
      function Media2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Media2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Media2.__proto__ || Object.getPrototypeOf(Media2)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
          currentTime: 0,
          progress: 0,
          duration: 0.1,
          volume: 1,
          isLoading: true,
          isPlaying: false,
          isMuted: false,
          isFullscreen: false
        }, _this._isMounted = false, _this._playerProps = {}, _this._lastVolume = 0, _this._setPlayer = function(component) {
          _this._player = component;
        }, _this._setPlayerProps = function(props) {
          _this._playerProps = props;
        }, _this._setPlayerState = function(state) {
          _this.setState(state);
        }, _this.play = function() {
          return _this._player.play();
        }, _this.pause = function() {
          _this._player.pause();
        }, _this.playPause = function() {
          if (!_this.state.isPlaying) {
            return _this.play();
          } else {
            _this.pause();
          }
        }, _this.stop = function() {
          _this._player.stop();
        }, _this.seekTo = function(currentTime) {
          _this._player.seekTo(currentTime);
          _this.setState({ currentTime });
        }, _this.skipTime = function(amount) {
          var _this$state = _this.state, currentTime = _this$state.currentTime, duration = _this$state.duration;
          var newTime = currentTime + amount;
          if (newTime < 0) {
            newTime = 0;
          } else if (newTime > duration) {
            newTime = duration;
          }
          _this.seekTo(newTime);
        }, _this.mute = function(isMuted) {
          if (isMuted) {
            _this._lastVolume = _this.state.volume;
            _this._player.setVolume(0);
          } else {
            var volume = _this._lastVolume > 0 ? _this._lastVolume : 0.1;
            _this._player.setVolume(volume);
          }
          _this._player.mute(isMuted);
        }, _this.muteUnmute = function() {
          _this.mute(!_this.state.isMuted);
        }, _this.setVolume = function(volume) {
          var isMuted = volume <= 0;
          if (isMuted !== _this.state.isMuted) {
            _this.mute(isMuted);
          } else {
            _this._lastVolume = volume;
          }
          _this._player.setVolume(volume);
        }, _this.addVolume = function(amount) {
          var newVolume = _this.state.volume + amount * 0.01;
          if (newVolume < 0) {
            newVolume = 0;
          } else if (newVolume > 1) {
            newVolume = 1;
          }
          _this.setVolume(newVolume);
        }, _this.fullscreen = function() {
          if (!_this.state.isFullscreen) {
            _this._player.node[_requestFullscreen2.default]();
          } else {
            document[_exitFullscreen2.default]();
          }
        }, _this._handleFullscreenChange = function(_ref2) {
          var target = _ref2.target;
          if (target === _this._player.node) {
            _this.setState({ isFullscreen: !_this.state.isFullscreen });
          }
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Media2, [{
        key: "getChildContext",
        value: function getChildContext() {
          return {
            media: this._getPublicMediaProps(),
            _mediaSetters: {
              setPlayer: this._setPlayer,
              setPlayerProps: this._setPlayerProps,
              setPlayerState: this._setPlayerState
            },
            _mediaGetters: {
              getPlayerEvents: this._getPlayerEvents()
            }
          };
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          this._isMounted = true;
          (0, _fullscreenChange2.default)("add", this._handleFullscreenChange);
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this._isMounted = false;
          (0, _fullscreenChange2.default)("remove", this._handleFullscreenChange);
        }
      }, {
        key: "_getPublicMediaProps",
        value: function _getPublicMediaProps() {
          return _extends({}, this.state, {
            play: this.play,
            pause: this.pause,
            playPause: this.playPause,
            stop: this.stop,
            seekTo: this.seekTo,
            skipTime: this.skipTime,
            mute: this.mute,
            muteUnmute: this.muteUnmute,
            setVolume: this.setVolume,
            addVolume: this.addVolume,
            fullscreen: this.fullscreen
          });
        }
      }, {
        key: "_getPlayerEvents",
        value: function _getPlayerEvents() {
          var _this2 = this;
          var events = {};
          MEDIA_EVENTS_KEYS.forEach(function(key) {
            var stateKey = MEDIA_EVENTS[key];
            var handlePropCallback = function handlePropCallback2() {
              var propCallback = _this2._playerProps[key];
              if (typeof propCallback === "function") {
                propCallback(_this2.state);
              }
            };
            events[key] = function(val) {
              if (stateKey) {
                if (_this2._isMounted) {
                  _this2.setState(_defineProperty({}, stateKey, val), handlePropCallback);
                }
              } else {
                handlePropCallback();
              }
            };
          });
          return events;
        }
      }, {
        key: "render",
        value: function render() {
          var children = this.props.children;
          if (typeof children === "function") {
            return children(this._getPublicMediaProps());
          }
          return _react.Children.only(children);
        }
      }]);
      return Media2;
    }(_react.Component);
    Media.propTypes = {
      children: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.node]).isRequired
    };
    Media.childContextTypes = _contextTypes2.default;
    exports.default = Media;
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/vendors/vendor-prop-types.js
var require_vendor_prop_types = __commonJS({
  "node_modules/react-media-player/lib/vendors/vendor-prop-types.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = {
      src: _propTypes2.default.string,
      onPlaying: _propTypes2.default.func,
      onProgress: _propTypes2.default.func,
      onDuration: _propTypes2.default.func,
      onTimeUpdate: _propTypes2.default.func,
      onVolumeChange: _propTypes2.default.func
    };
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/vendors/HTML5.js
var require_HTML5 = __commonJS({
  "node_modules/react-media-player/lib/vendors/HTML5.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _reactDom = require_react_dom();
    var _vendorPropTypes = require_vendor_prop_types();
    var _vendorPropTypes2 = _interopRequireDefault(_vendorPropTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var AudioContext = typeof window === "undefined" ? false : window.AudioContext || window.webkitAudioContext;
    var audioContext = void 0;
    if (AudioContext) {
      audioContext = new AudioContext();
    }
    var HTML5 = function(_Component) {
      _inherits(HTML52, _Component);
      function HTML52() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, HTML52);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = HTML52.__proto__ || Object.getPrototypeOf(HTML52)).call.apply(_ref, [this].concat(args))), _this), _this._isLoading = function() {
          _this.props.isLoading(true);
        }, _this._isNotLoading = function() {
          _this.props.isLoading(false);
        }, _this._handleCanPlay = function() {
          _this.props.onReady();
        }, _this._handlePlay = function() {
          _this.props.onPlay(true);
          _this._isNotLoading();
        }, _this._handlePause = function() {
          _this.props.onPause(false);
        }, _this._handleEnded = function() {
          _this.props.onEnded(false);
        }, _this._handleError = function(e) {
          if (_this._playerStopped) {
            _this._playerStopped = false;
          } else {
            _this.props.onError(e);
            _this._isNotLoading();
          }
        }, _this._handleProgress = function(_ref2) {
          var _ref2$target = _ref2.target, buffered = _ref2$target.buffered, duration = _ref2$target.duration;
          var progress = 0;
          if (duration > 0 && buffered.length) {
            progress = buffered.end(buffered.length - 1) / duration;
          }
          _this.props.onProgress(progress);
        }, _this._handleDuration = function(_ref3) {
          var duration = _ref3.target.duration;
          _this.props.onDuration(duration);
        }, _this._handleTimeUpdate = function(_ref4) {
          var currentTime = _ref4.target.currentTime;
          _this.props.onTimeUpdate(currentTime);
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(HTML52, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _props$extraProps = this.props.extraProps, connectSource = _props$extraProps.connectSource, useAudioObject = _props$extraProps.useAudioObject;
          if (this.props.vendor === "audio") {
            if (useAudioObject) {
              this._createAudioObject();
              this._bindAudioObjectEvents();
            }
            if (audioContext && connectSource) {
              this._connectAudioContext();
            }
          }
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(lastProps) {
          var _props$extraProps2 = this.props.extraProps, connectSource = _props$extraProps2.connectSource, useAudioObject = _props$extraProps2.useAudioObject;
          var vendorChanged = this.props.vendor !== lastProps.vendor;
          var sourceChanged = this.props.src !== lastProps.src;
          if (useAudioObject) {
            if (vendorChanged) {
              this._createAudioObject();
            } else if (sourceChanged) {
              this._destroyAudioObject();
              this._createAudioObject();
            }
            this._bindAudioObjectEvents();
          }
          if (this.props.vendor === "audio" && audioContext && connectSource) {
            if (vendorChanged) {
              this._connectAudioContext();
            } else if (sourceChanged) {
              this._disconnectAudioContext();
              this._connectAudioContext();
            }
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          var _props$extraProps3 = this.props.extraProps, connectSource = _props$extraProps3.connectSource, useAudioObject = _props$extraProps3.useAudioObject;
          if (audioContext && connectSource) {
            this._disconnectAudioContext();
          }
          if (useAudioObject) {
            this._destroyAudioObject();
          }
        }
      }, {
        key: "play",
        value: function play() {
          if (audioContext && audioContext.state === "suspended") {
            audioContext.resume();
          }
          return this._player.play();
        }
      }, {
        key: "pause",
        value: function pause() {
          this._player.pause();
        }
      }, {
        key: "stop",
        value: function stop() {
          this._player.pause();
          this._player.currentTime = 0;
        }
      }, {
        key: "seekTo",
        value: function seekTo(currentTime) {
          if (this._player.readyState > 0) {
            this._player.currentTime = currentTime;
          }
        }
      }, {
        key: "mute",
        value: function mute(muted) {
          var nextVolume = muted ? 0 : 1;
          this._player.muted = muted;
          this.setVolume(nextVolume);
          this.props.onMute(muted);
          this.props.onVolumeChange(nextVolume);
        }
      }, {
        key: "setVolume",
        value: function setVolume(volume) {
          if (this._gain) {
            this._gain.gain.value = volume;
          } else {
            this._player.volume = volume;
          }
          this.props.onVolumeChange(volume);
        }
      }, {
        key: "_createAudioObject",
        value: function _createAudioObject() {
          this._player = new Audio(this.props.src);
        }
      }, {
        key: "_destroyAudioObject",
        value: function _destroyAudioObject() {
          this.stop();
          this._player.src = "about:blank";
          this._playerStopped = true;
        }
      }, {
        key: "_bindAudioObjectEvents",
        value: function _bindAudioObjectEvents() {
          var _this2 = this;
          var _props$extraProps4 = this.props.extraProps, connectSource = _props$extraProps4.connectSource, useAudioObject = _props$extraProps4.useAudioObject, playerProps = _objectWithoutProperties(_props$extraProps4, ["connectSource", "useAudioObject"]);
          var playerEvents = this._playerEvents;
          Object.keys(playerProps).forEach(function(key) {
            _this2._player[key] = playerProps[key];
          });
          Object.keys(playerEvents).forEach(function(key) {
            _this2._player[key.toLowerCase()] = playerEvents[key];
          });
        }
      }, {
        key: "_connectAudioContext",
        value: function _connectAudioContext() {
          var _props$extraProps5 = this.props.extraProps, connectSource = _props$extraProps5.connectSource, useAudioObject = _props$extraProps5.useAudioObject;
          if (useAudioObject || !this._source) {
            this._source = audioContext.createMediaElementSource(useAudioObject ? this.instance : this.node);
          }
          this._gain = audioContext.createGain();
          connectSource(this._source, audioContext).connect(this._gain);
          this._gain.connect(audioContext.destination);
        }
      }, {
        key: "_disconnectAudioContext",
        value: function _disconnectAudioContext() {
          this._source.disconnect(0);
        }
      }, {
        key: "render",
        value: function render() {
          var _this3 = this;
          var _props = this.props, vendor = _props.vendor, src = _props.src, _props$extraProps6 = _props.extraProps, connectSource = _props$extraProps6.connectSource, useAudioObject = _props$extraProps6.useAudioObject, playerProps = _objectWithoutProperties(_props$extraProps6, ["connectSource", "useAudioObject"]);
          return useAudioObject ? null : (0, _react.createElement)(vendor, _extends({
            ref: function ref(c) {
              return _this3._player = c;
            },
            src
          }, playerProps, this._playerEvents));
        }
      }, {
        key: "instance",
        get: function get() {
          return this._player;
        }
      }, {
        key: "node",
        get: function get() {
          return (0, _reactDom.findDOMNode)(this._player);
        }
      }, {
        key: "_playerEvents",
        get: function get() {
          return {
            onCanPlay: this._handleCanPlay,
            onPlay: this._handlePlay,
            onPlaying: this._isNotLoading,
            onPause: this._handlePause,
            onEnded: this._handleEnded,
            onWaiting: this._isLoading,
            onError: this._handleError,
            onProgress: this._handleProgress,
            onLoadedMetadata: this._handleDuration,
            onTimeUpdate: this._handleTimeUpdate
          };
        }
      }]);
      return HTML52;
    }(_react.Component);
    HTML5.propTypes = _extends({}, _vendorPropTypes2.default, {
      useAudioObject: _propTypes2.default.bool
    });
    exports.default = HTML5;
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/utils/get-vimeo-id.js
var require_get_vimeo_id = __commonJS({
  "node_modules/react-media-player/lib/utils/get-vimeo-id.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getVimeoId;
    function getVimeoId(url) {
      var regExp = /https?:\/\/(?:www\.|player\.)?vimeo.com\/(?:channels\/(?:\w+\/)?|groups\/([^\/]*)\/videos\/|album\/(\d+)\/video\/|video\/|)(\d+)(?:$|\/|\?)/;
      var match = url.match(regExp);
      if (match) {
        return match[3];
      } else {
        throw "Invalid Vimeo ID provided";
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/vendors/Vimeo.js
var require_Vimeo = __commonJS({
  "node_modules/react-media-player/lib/vendors/Vimeo.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _reactDom = require_react_dom();
    var _getVimeoId = require_get_vimeo_id();
    var _getVimeoId2 = _interopRequireDefault(_getVimeoId);
    var _vendorPropTypes = require_vendor_prop_types();
    var _vendorPropTypes2 = _interopRequireDefault(_vendorPropTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Vimeo = function(_Component) {
      _inherits(Vimeo2, _Component);
      function Vimeo2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Vimeo2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Vimeo2.__proto__ || Object.getPrototypeOf(Vimeo2)).call.apply(_ref, [this].concat(args))), _this), _this._vimeoId = (0, _getVimeoId2.default)(_this.props.src), _this._origin = "*", _this._onMessage = function(e) {
          var data = void 0;
          if (!/^https?:\/\/player.vimeo.com/.test(e.origin)) {
            return false;
          }
          if (_this._origin === "*") {
            _this._origin = e.origin;
          }
          try {
            data = JSON.parse(e.data);
          } catch (err) {
            _this.props.onError(err);
          }
          if (data) {
            switch (data.event) {
              case "ready":
                _this._postOnReadyMessages();
                break;
              case "loadProgress":
                _this.props.onProgress(data.data.percent);
                break;
              case "playProgress":
                _this.props.onTimeUpdate(data.data.seconds);
                break;
              case "play":
                _this.props.onPlay(true);
                break;
              case "pause":
                _this.props.onPause(false);
                break;
              case "finish":
                _this.props.onEnded(false);
                break;
            }
            if (data.method === "getDuration") {
              _this.props.onDuration(data.value);
            }
          }
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Vimeo2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          window.addEventListener("message", this._onMessage);
        }
      }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
          if (nextProps.src !== this.props.src) {
            this._vimeoId = (0, _getVimeoId2.default)(nextProps.src);
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          window.removeEventListener("message", this._onMessage);
        }
      }, {
        key: "_postMessage",
        value: function _postMessage(method, value) {
          var data = { method };
          if (value) {
            data.value = value;
          }
          this._iframe.contentWindow.postMessage(JSON.stringify(data), this._origin);
        }
      }, {
        key: "_postOnReadyMessages",
        value: function _postOnReadyMessages() {
          var _this2 = this;
          ;
          ["loadProgress", "playProgress", "play", "pause", "finish"].forEach(function(listener) {
            return _this2._postMessage("addEventListener", listener);
          });
          this._postMessage("getDuration");
          this.props.onReady();
        }
      }, {
        key: "play",
        value: function play() {
          this._postMessage("play");
        }
      }, {
        key: "pause",
        value: function pause() {
          this._postMessage("pause");
        }
      }, {
        key: "stop",
        value: function stop() {
          this._postMessage("unload");
        }
      }, {
        key: "seekTo",
        value: function seekTo(currentTime) {
          this._postMessage("seekTo", currentTime);
        }
      }, {
        key: "mute",
        value: function mute(muted) {
          this._postMessage("setVolume", muted ? "0" : "1");
          this.props.onMute(muted);
          this.props.onVolumeChange(muted ? 0 : 1);
        }
      }, {
        key: "setVolume",
        value: function setVolume(volume) {
          this._postMessage("setVolume", volume);
          this.props.onVolumeChange(+volume);
        }
      }, {
        key: "render",
        value: function render() {
          var _this3 = this;
          return _react2.default.createElement("iframe", _extends({
            ref: function ref(c) {
              return _this3._iframe = c;
            },
            src: "https://player.vimeo.com/video/" + this._vimeoId + "?api=1"
          }, this.props.extraProps));
        }
      }, {
        key: "instance",
        get: function get() {
          return this._iframe;
        }
      }, {
        key: "node",
        get: function get() {
          return (0, _reactDom.findDOMNode)(this._iframe);
        }
      }]);
      return Vimeo2;
    }(_react.Component);
    Vimeo.propTypes = _vendorPropTypes2.default;
    exports.default = Vimeo;
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/utils/load-api.js
var require_load_api = __commonJS({
  "node_modules/react-media-player/lib/utils/load-api.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = loadAPI;
    function loadAPI(url, cb) {
      var script = document.createElement("script");
      script.async = true;
      script.src = url;
      script.onload = function() {
        return typeof cb === "function" && cb();
      };
      document.head.appendChild(script);
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/utils/youtube-api-loader.js
var require_youtube_api_loader = __commonJS({
  "node_modules/react-media-player/lib/utils/youtube-api-loader.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _loadApi = require_load_api();
    var _loadApi2 = _interopRequireDefault(_loadApi);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = {
      _queue: [],
      _isLoaded: false,
      load: function load(component) {
        if (this._isLoaded) {
          component._createPlayer();
        } else {
          this._queue.push(component);
          if (this._queue.length === 1) {
            this._loadAPI();
          }
        }
      },
      _loadAPI: function _loadAPI() {
        var _this = this;
        (0, _loadApi2.default)("//youtube.com/player_api");
        window.onYouTubeIframeAPIReady = function() {
          _this._isLoaded = true;
          for (var i = _this._queue.length; i--; ) {
            _this._queue[i]._createPlayer();
          }
          _this._queue = [];
        };
      }
    };
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/utils/get-youtube-id.js
var require_get_youtube_id = __commonJS({
  "node_modules/react-media-player/lib/utils/get-youtube-id.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getYoutubeId;
    function getYoutubeId(url) {
      var regExp = /.*(?:youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=)([^#\&\?]*).*/;
      var match = url.match(regExp);
      if (match && match[1].length === 11) {
        return match[1];
      } else {
        throw "Invalid Youtube ID provided";
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/vendors/Youtube.js
var require_Youtube = __commonJS({
  "node_modules/react-media-player/lib/vendors/Youtube.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _youtubeApiLoader = require_youtube_api_loader();
    var _youtubeApiLoader2 = _interopRequireDefault(_youtubeApiLoader);
    var _getYoutubeId = require_get_youtube_id();
    var _getYoutubeId2 = _interopRequireDefault(_getYoutubeId);
    var _vendorPropTypes = require_vendor_prop_types();
    var _vendorPropTypes2 = _interopRequireDefault(_vendorPropTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Youtube = function(_Component) {
      _inherits(Youtube2, _Component);
      function Youtube2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Youtube2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Youtube2.__proto__ || Object.getPrototypeOf(Youtube2)).call.apply(_ref, [this].concat(args))), _this), _this._videoId = (0, _getYoutubeId2.default)(_this.props.src), _this._lastVideoId = _this._videoId, _this._isReady = false, _this._isMounted = false, _this._progressId = null, _this._timeUpdateId = null, _this._handleProgress = function() {
          if (!_this._isMounted)
            return;
          var progress = _this._player.getVideoLoadedFraction() || 0;
          _this.props.onProgress(progress);
          if (_this._progressId && progress < 1) {
            _this._progressId = requestAnimationFrame(_this._handleProgress);
          }
        }, _this._handleTimeUpdate = function() {
          if (!_this._isMounted)
            return;
          _this.props.onTimeUpdate(_this._player.getCurrentTime() || 0);
          if (_this._timeUpdateId) {
            _this._timeUpdateId = requestAnimationFrame(_this._handleTimeUpdate);
          }
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Youtube2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this._isMounted = true;
          _youtubeApiLoader2.default.load(this);
        }
      }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
          if (nextProps.src !== this.props.src) {
            this._lastVideoId = this._videoId;
            this._videoId = (0, _getYoutubeId2.default)(nextProps.src);
            if (this._isReady) {
              if (nextProps.autoPlay) {
                this._player.loadVideoById(this._videoId);
              } else {
                this._player.cueVideoById(this._videoId);
              }
              this.props.onReady();
            }
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this._isMounted = false;
          if (this._progressId) {
            cancelAnimationFrame(this._progressId);
          }
          if (this._timeUpdateId) {
            cancelAnimationFrame(this._timeUpdateId);
          }
          if (this._player) {
            this._player.destroy();
          }
        }
      }, {
        key: "_createPlayer",
        value: function _createPlayer() {
          this._player = new YT.Player(this._node, {
            videoId: this._videoId,
            events: this._events(),
            playerVars: _extends({
              controls: 0,
              showinfo: 0,
              modestbranding: 1
            }, this.props.config.youtube)
          });
        }
      }, {
        key: "_events",
        value: function _events() {
          var _this2 = this;
          return {
            onReady: function onReady() {
              if (_this2._videoId !== _this2._lastVideoId) {
                _this2._player.loadVideoById(_this2._videoId);
              }
              _this2._isReady = true;
              _this2.props.onDuration(_this2._player.getDuration());
              _this2.props.onReady();
            },
            onStateChange: function onStateChange(_ref2) {
              var data = _ref2.data;
              var _props$config$youtube = _this2.props.config.youtube, start = _props$config$youtube.start, end = _props$config$youtube.end;
              var _window$YT$PlayerStat = window.YT.PlayerState, PLAYING = _window$YT$PlayerStat.PLAYING, PAUSED = _window$YT$PlayerStat.PAUSED, ENDED = _window$YT$PlayerStat.ENDED, BUFFERING = _window$YT$PlayerStat.BUFFERING, CUED = _window$YT$PlayerStat.CUED;
              var isPlaying = data === PLAYING;
              if (isPlaying) {
                _this2.props.onPlay(true);
                _this2.props.isLoading(false);
                _this2.props.onDuration(_this2._player.getDuration());
                _this2._timeUpdateId = requestAnimationFrame(_this2._handleTimeUpdate);
                if (start || end) {
                  var currentTime = _this2._player.getCurrentTime();
                  if (currentTime < start || currentTime > end) {
                    _this2._player.seekTo(start === void 0 ? end : start);
                  }
                }
              } else {
                cancelAnimationFrame(_this2._timeUpdateId);
                _this2._timeUpdateId = null;
                cancelAnimationFrame(_this2._progressId);
                _this2._progressId = null;
              }
              if (data === -1 || data === BUFFERING) {
                _this2.props.isLoading(true);
              }
              if (data === PAUSED) {
                _this2.props.onPause(false);
              }
              if (data === ENDED) {
                _this2.props.isLoading(false);
                _this2.props.onEnded(false);
              }
              if (isPlaying || data === BUFFERING) {
                _this2._progressId = requestAnimationFrame(_this2._handleProgress);
              }
              if (data === CUED) {
                _this2.props.isLoading(false);
                _this2.props.onDuration(0.1);
              }
            },
            onError: function onError(e) {
              _this2.props.onError(e.data);
            }
          };
        }
      }, {
        key: "play",
        value: function play() {
          this._player.playVideo();
        }
      }, {
        key: "pause",
        value: function pause() {
          this._player.pauseVideo();
        }
      }, {
        key: "stop",
        value: function stop() {
          this._player.stopVideo();
        }
      }, {
        key: "seekTo",
        value: function seekTo(currentTime) {
          this._player.seekTo(currentTime);
        }
      }, {
        key: "mute",
        value: function mute(muted) {
          if (muted) {
            this._player.mute();
          } else {
            this._player.unMute();
          }
          this.props.onMute(muted);
          this.props.onVolumeChange(muted ? 0 : 1);
        }
      }, {
        key: "setVolume",
        value: function setVolume(volume) {
          this._player.setVolume(+volume * 100);
          this.props.onVolumeChange(+volume);
        }
      }, {
        key: "render",
        value: function render() {
          var _this3 = this;
          return _react2.default.createElement("div", _extends({ ref: function ref(c) {
            return _this3._node = c;
          } }, this.props.extraProps));
        }
      }, {
        key: "instance",
        get: function get() {
          return this._player;
        }
      }, {
        key: "node",
        get: function get() {
          return this._player.getIframe();
        }
      }]);
      return Youtube2;
    }(_react.Component);
    Youtube.propTypes = _vendorPropTypes2.default;
    exports.default = Youtube;
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/utils/get-vendor.js
var require_get_vendor = __commonJS({
  "node_modules/react-media-player/lib/utils/get-vendor.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getVendor;
    var _HTML = require_HTML5();
    var _HTML2 = _interopRequireDefault(_HTML);
    var _Vimeo = require_Vimeo();
    var _Vimeo2 = _interopRequireDefault(_Vimeo);
    var _Youtube = require_Youtube();
    var _Youtube2 = _interopRequireDefault(_Youtube);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getVendor(src, vendor) {
      src = src || "";
      if (vendor === "youtube" || /youtube.com|youtu.be/.test(src)) {
        return { vendor: "youtube", component: _Youtube2.default };
      } else if (vendor === "vimeo" || /vimeo.com/.test(src)) {
        return { vendor: "vimeo", component: _Vimeo2.default };
      } else {
        var isAudio = vendor === "audio" || /\.(mp3|wav|m4a)($|\?)/i.test(src);
        return {
          vendor: isAudio ? "audio" : "video",
          component: _HTML2.default
        };
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/Player.js
var require_Player = __commonJS({
  "node_modules/react-media-player/lib/Player.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _contextTypes = require_context_types();
    var _contextTypes2 = _interopRequireDefault(_contextTypes);
    var _getVendor2 = require_get_vendor();
    var _getVendor3 = _interopRequireDefault(_getVendor2);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var defaultConfig = {
      youtube: {},
      vimeo: {},
      html5: {}
    };
    var Player = function(_Component) {
      _inherits(Player2, _Component);
      function Player2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Player2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Player2.__proto__ || Object.getPrototypeOf(Player2)).call.apply(_ref, [this].concat(args))), _this), _this._defaultsSet = false, _this._setPlayer = function(component) {
          _this.context._mediaSetters.setPlayer(component);
          _this._component = component;
        }, _this._setLoading = function(isLoading) {
          _this.context._mediaSetters.setPlayerState({ isLoading });
        }, _this._handleOnReady = function() {
          var _this$context = _this.context, media = _this$context.media, _mediaSetters = _this$context._mediaSetters;
          var _this$props = _this.props, autoPlay = _this$props.autoPlay, onReady = _this$props.onReady;
          if (!_this._defaultsSet) {
            _this._setDefaults();
          } else {
            media.mute(media.isMuted);
            media.setVolume(media.volume);
          }
          if (autoPlay) {
            media.play();
          }
          _this._setLoading(false);
          if (typeof onReady === "function") {
            onReady(media);
          }
        }, _this._handleOnEnded = function() {
          var _this$context2 = _this.context, media = _this$context2.media, _mediaSetters = _this$context2._mediaSetters;
          var _this$props2 = _this.props, loop = _this$props2.loop, onEnded = _this$props2.onEnded;
          if (loop) {
            media.seekTo(0);
            media.play();
          } else {
            _mediaSetters.setPlayerState({ isPlaying: false });
          }
          if (typeof onEnded === "function") {
            onEnded(media);
          }
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Player2, [{
        key: "componentWillMount",
        value: function componentWillMount() {
          var _props = this.props, defaultCurrentTime = _props.defaultCurrentTime, defaultMuted = _props.defaultMuted, defaultVolume = _props.defaultVolume, restProps = _objectWithoutProperties(_props, ["defaultCurrentTime", "defaultMuted", "defaultVolume"]);
          this._setPlayerProps(_extends({ volume: defaultVolume }, restProps));
          this._setPlayerState({
            currentTime: defaultCurrentTime,
            volume: defaultMuted ? 0 : defaultVolume
          });
          if (!this.props.src) {
            this._setLoading(false);
          }
        }
      }, {
        key: "componentWillUpdate",
        value: function componentWillUpdate(nextProps) {
          this._setPlayerProps(nextProps);
          if (this.props.src !== nextProps.src) {
            this._setPlayerState({
              currentTime: 0,
              progress: 0,
              duration: 0,
              isLoading: true,
              isPlaying: false
            });
          }
        }
      }, {
        key: "_setPlayerProps",
        value: function _setPlayerProps(props) {
          this.context._mediaSetters.setPlayerProps(props);
        }
      }, {
        key: "_setPlayerState",
        value: function _setPlayerState(state) {
          this.context._mediaSetters.setPlayerState(state);
        }
      }, {
        key: "_setDefaults",
        value: function _setDefaults() {
          var media = this.context.media;
          var _props2 = this.props, defaultCurrentTime = _props2.defaultCurrentTime, defaultVolume = _props2.defaultVolume, defaultMuted = _props2.defaultMuted;
          if (defaultCurrentTime > 0) {
            media.seekTo(defaultCurrentTime);
          }
          if (defaultMuted) {
            media.mute(defaultMuted);
          } else if (defaultVolume !== 1) {
            media.setVolume(defaultVolume);
          }
          this._defaultsSet = true;
        }
      }, {
        key: "render",
        value: function render() {
          var _props3 = this.props, src = _props3.src, _vendor = _props3.vendor, config = _props3.config, autoPlay = _props3.autoPlay, onReady = _props3.onReady, onEnded = _props3.onEnded, defaultCurrentTime = _props3.defaultCurrentTime, defaultVolume = _props3.defaultVolume, defaultMuted = _props3.defaultMuted, extraProps = _objectWithoutProperties(_props3, ["src", "vendor", "config", "autoPlay", "onReady", "onEnded", "defaultCurrentTime", "defaultVolume", "defaultMuted"]);
          var _getVendor = (0, _getVendor3.default)(src, _vendor), vendor = _getVendor.vendor, component = _getVendor.component;
          return (0, _react.createElement)(component, _extends({
            src,
            vendor,
            autoPlay,
            config: _extends({}, defaultConfig, config),
            extraProps,
            ref: this._setPlayer,
            isLoading: this._setLoading,
            onReady: this._handleOnReady,
            onEnded: this._handleOnEnded
          }, this.context._mediaGetters.getPlayerEvents));
        }
      }, {
        key: "instance",
        get: function get() {
          return this._component && this._component.instance;
        }
      }]);
      return Player2;
    }(_react.Component);
    Player.propTypes = {
      vendor: _propTypes2.default.oneOf(["video", "audio", "youtube", "vimeo"]),
      defaultCurrentTime: _propTypes2.default.number,
      defaultVolume: _propTypes2.default.number,
      defaultMuted: _propTypes2.default.bool
    };
    Player.defaultProps = {
      defaultCurrentTime: 0,
      defaultVolume: 1,
      defaultMuted: false
    };
    Player.contextTypes = _contextTypes2.default;
    exports.default = Player;
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/decorators/with-media-props.js
var require_with_media_props = __commonJS({
  "node_modules/react-media-player/lib/decorators/with-media-props.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    exports.default = withMediaProps;
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _contextTypes = require_context_types();
    var _contextTypes2 = _interopRequireDefault(_contextTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    function withMediaProps(MediaComponent) {
      var _class, _temp;
      return _temp = _class = function(_Component) {
        _inherits(_class2, _Component);
        function _class2() {
          _classCallCheck(this, _class2);
          return _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).apply(this, arguments));
        }
        _createClass(_class2, [{
          key: "render",
          value: function render() {
            return _react2.default.createElement(MediaComponent, _extends({}, this.props, { media: this.context.media }));
          }
        }]);
        return _class2;
      }(_react.Component), _class.displayName = "withMediaProps", _class.contextTypes = _contextTypes2.default, _temp;
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/controls/PlayPause.js
var require_PlayPause = __commonJS({
  "node_modules/react-media-player/lib/controls/PlayPause.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _withMediaProps = require_with_media_props();
    var _withMediaProps2 = _interopRequireDefault(_withMediaProps);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var PlayPause = function(_Component) {
      _inherits(PlayPause2, _Component);
      function PlayPause2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, PlayPause2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PlayPause2.__proto__ || Object.getPrototypeOf(PlayPause2)).call.apply(_ref, [this].concat(args))), _this), _this._handlePlayPause = function() {
          _this.props.media.playPause();
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(PlayPause2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(_ref2) {
          var media = _ref2.media;
          return this.props.media.isPlaying !== media.isPlaying;
        }
      }, {
        key: "render",
        value: function render() {
          var _props = this.props, className = _props.className, style = _props.style, media = _props.media;
          return _react2.default.createElement(
            "button",
            {
              type: "button",
              className,
              style,
              onClick: this._handlePlayPause
            },
            media.isPlaying ? "Pause" : "Play"
          );
        }
      }]);
      return PlayPause2;
    }(_react.Component);
    exports.default = (0, _withMediaProps2.default)(PlayPause);
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/utils/format-time.js
var require_format_time = __commonJS({
  "node_modules/react-media-player/lib/utils/format-time.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = formatTime;
    function formatTime(current) {
      var h = Math.floor(current / 3600);
      var m = Math.floor((current - h * 3600) / 60);
      var s = Math.floor(current % 60);
      if (s < 10) {
        s = "0" + s;
      }
      if (h > 0) {
        m = m < 10 ? "0" + m : m;
        return h + ":" + m + ":" + s;
      } else {
        return m + ":" + s;
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/controls/CurrentTime.js
var require_CurrentTime = __commonJS({
  "node_modules/react-media-player/lib/controls/CurrentTime.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _withMediaProps = require_with_media_props();
    var _withMediaProps2 = _interopRequireDefault(_withMediaProps);
    var _formatTime = require_format_time();
    var _formatTime2 = _interopRequireDefault(_formatTime);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var CurrentTime = function(_Component) {
      _inherits(CurrentTime2, _Component);
      function CurrentTime2() {
        _classCallCheck(this, CurrentTime2);
        return _possibleConstructorReturn(this, (CurrentTime2.__proto__ || Object.getPrototypeOf(CurrentTime2)).apply(this, arguments));
      }
      _createClass(CurrentTime2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(_ref) {
          var media = _ref.media;
          return this.props.media.currentTime !== media.currentTime;
        }
      }, {
        key: "render",
        value: function render() {
          var _props = this.props, className = _props.className, style = _props.style, media = _props.media;
          return _react2.default.createElement(
            "time",
            { className, style },
            (0, _formatTime2.default)(media.currentTime)
          );
        }
      }]);
      return CurrentTime2;
    }(_react.Component);
    exports.default = (0, _withMediaProps2.default)(CurrentTime);
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/controls/Progress.js
var require_Progress = __commonJS({
  "node_modules/react-media-player/lib/controls/Progress.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _withMediaProps = require_with_media_props();
    var _withMediaProps2 = _interopRequireDefault(_withMediaProps);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Progress = function(_Component) {
      _inherits(Progress2, _Component);
      function Progress2() {
        _classCallCheck(this, Progress2);
        return _possibleConstructorReturn(this, (Progress2.__proto__ || Object.getPrototypeOf(Progress2)).apply(this, arguments));
      }
      _createClass(Progress2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(_ref) {
          var media = _ref.media;
          return this.props.media.progress !== media.progress;
        }
      }, {
        key: "render",
        value: function render() {
          var _props = this.props, className = _props.className, style = _props.style, media = _props.media;
          return _react2.default.createElement("progress", {
            className,
            style,
            max: 100,
            value: media.progress * 100
          });
        }
      }]);
      return Progress2;
    }(_react.Component);
    exports.default = (0, _withMediaProps2.default)(Progress);
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/controls/SeekBar.js
var require_SeekBar = __commonJS({
  "node_modules/react-media-player/lib/controls/SeekBar.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _withMediaProps = require_with_media_props();
    var _withMediaProps2 = _interopRequireDefault(_withMediaProps);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var SeekBar = function(_Component) {
      _inherits(SeekBar2, _Component);
      function SeekBar2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, SeekBar2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SeekBar2.__proto__ || Object.getPrototypeOf(SeekBar2)).call.apply(_ref, [this].concat(args))), _this), _this._isPlayingOnMouseDown = false, _this._onChangeUsed = false, _this._handleMouseDown = function() {
          _this._isPlayingOnMouseDown = _this.props.media.isPlaying;
          _this.props.media.pause();
        }, _this._handleMouseUp = function(_ref2) {
          var value = _ref2.target.value;
          if (!_this._onChangeUsed) {
            _this.props.media.seekTo(+value);
          }
          if (_this._isPlayingOnMouseDown) {
            _this.props.media.play();
          }
        }, _this._handleChange = function(_ref3) {
          var value = _ref3.target.value;
          _this.props.media.seekTo(+value);
          _this._onChangeUsed = true;
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(SeekBar2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(_ref4) {
          var media = _ref4.media;
          return this.props.media.currentTime !== media.currentTime || this.props.media.duration !== media.duration;
        }
      }, {
        key: "render",
        value: function render() {
          var _props = this.props, className = _props.className, style = _props.style, media = _props.media;
          var duration = media.duration, currentTime = media.currentTime;
          return _react2.default.createElement("input", {
            type: "range",
            step: "any",
            max: duration.toFixed(4),
            value: currentTime,
            onMouseDown: this._handleMouseDown,
            onMouseUp: this._handleMouseUp,
            onChange: this._handleChange,
            className,
            style: _extends({
              backgroundSize: currentTime * 100 / duration + "% 100%"
            }, style)
          });
        }
      }]);
      return SeekBar2;
    }(_react.Component);
    exports.default = (0, _withMediaProps2.default)(SeekBar);
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/controls/Duration.js
var require_Duration = __commonJS({
  "node_modules/react-media-player/lib/controls/Duration.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _withMediaProps = require_with_media_props();
    var _withMediaProps2 = _interopRequireDefault(_withMediaProps);
    var _formatTime = require_format_time();
    var _formatTime2 = _interopRequireDefault(_formatTime);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Duration = function(_Component) {
      _inherits(Duration2, _Component);
      function Duration2() {
        _classCallCheck(this, Duration2);
        return _possibleConstructorReturn(this, (Duration2.__proto__ || Object.getPrototypeOf(Duration2)).apply(this, arguments));
      }
      _createClass(Duration2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(_ref) {
          var media = _ref.media;
          return this.props.media.duration !== media.duration;
        }
      }, {
        key: "render",
        value: function render() {
          var _props = this.props, className = _props.className, style = _props.style, media = _props.media;
          return _react2.default.createElement(
            "time",
            { className, style },
            (0, _formatTime2.default)(media.duration)
          );
        }
      }]);
      return Duration2;
    }(_react.Component);
    exports.default = (0, _withMediaProps2.default)(Duration);
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/controls/MuteUnmute.js
var require_MuteUnmute = __commonJS({
  "node_modules/react-media-player/lib/controls/MuteUnmute.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _withMediaProps = require_with_media_props();
    var _withMediaProps2 = _interopRequireDefault(_withMediaProps);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var MuteUnmute = function(_Component) {
      _inherits(MuteUnmute2, _Component);
      function MuteUnmute2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, MuteUnmute2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MuteUnmute2.__proto__ || Object.getPrototypeOf(MuteUnmute2)).call.apply(_ref, [this].concat(args))), _this), _this._handleMuteUnmute = function() {
          _this.props.media.muteUnmute();
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(MuteUnmute2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(_ref2) {
          var media = _ref2.media;
          return this.props.media.isMuted !== media.isMuted;
        }
      }, {
        key: "render",
        value: function render() {
          var _props = this.props, className = _props.className, style = _props.style, media = _props.media;
          return _react2.default.createElement(
            "button",
            {
              type: "button",
              className,
              style,
              onClick: this._handleMuteUnmute
            },
            media.isMuted ? "Unmute" : "Mute"
          );
        }
      }]);
      return MuteUnmute2;
    }(_react.Component);
    exports.default = (0, _withMediaProps2.default)(MuteUnmute);
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/controls/Volume.js
var require_Volume = __commonJS({
  "node_modules/react-media-player/lib/controls/Volume.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _withMediaProps = require_with_media_props();
    var _withMediaProps2 = _interopRequireDefault(_withMediaProps);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Volume = function(_Component) {
      _inherits(Volume2, _Component);
      function Volume2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Volume2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Volume2.__proto__ || Object.getPrototypeOf(Volume2)).call.apply(_ref, [this].concat(args))), _this), _this._onChangeUsed = false, _this._handleMouseUp = function(_ref2) {
          var value = _ref2.target.value;
          if (!_this._onChangeUsed) {
            _this.props.media.setVolume((+value).toFixed(4));
          }
        }, _this._handleChange = function(_ref3) {
          var value = _ref3.target.value;
          _this.props.media.setVolume((+value).toFixed(4));
          _this._onChangeUsed = true;
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Volume2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(_ref4) {
          var media = _ref4.media;
          return this.props.media.volume !== media.volume;
        }
      }, {
        key: "render",
        value: function render() {
          var _props = this.props, className = _props.className, style = _props.style, media = _props.media;
          var volume = media.volume;
          return _react2.default.createElement("input", {
            type: "range",
            step: "any",
            min: 0,
            max: 1,
            value: volume,
            onMouseUp: this._handleMouseUp,
            onChange: this._handleChange,
            className,
            style: _extends({
              backgroundSize: volume * 100 / 1 + "% 100%"
            }, style)
          });
        }
      }]);
      return Volume2;
    }(_react.Component);
    exports.default = (0, _withMediaProps2.default)(Volume);
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/controls/Fullscreen.js
var require_Fullscreen = __commonJS({
  "node_modules/react-media-player/lib/controls/Fullscreen.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _withMediaProps = require_with_media_props();
    var _withMediaProps2 = _interopRequireDefault(_withMediaProps);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Fullscreen = function(_Component) {
      _inherits(Fullscreen2, _Component);
      function Fullscreen2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Fullscreen2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Fullscreen2.__proto__ || Object.getPrototypeOf(Fullscreen2)).call.apply(_ref, [this].concat(args))), _this), _this._handleFullscreen = function() {
          _this.props.media.fullscreen();
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Fullscreen2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(_ref2) {
          var media = _ref2.media;
          return this.props.media.isFullscreen !== media.isFullscreen;
        }
      }, {
        key: "render",
        value: function render() {
          var _props = this.props, className = _props.className, style = _props.style, media = _props.media;
          return _react2.default.createElement(
            "button",
            {
              type: "button",
              className,
              style,
              onClick: this._handleFullscreen
            },
            media.isFullscreen ? "Exit Fullscreen" : "Fullscreen"
          );
        }
      }]);
      return Fullscreen2;
    }(_react.Component);
    exports.default = (0, _withMediaProps2.default)(Fullscreen);
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/controls/index.js
var require_controls = __commonJS({
  "node_modules/react-media-player/lib/controls/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Fullscreen = exports.Volume = exports.MuteUnmute = exports.Duration = exports.SeekBar = exports.Progress = exports.CurrentTime = exports.PlayPause = void 0;
    var _PlayPause2 = require_PlayPause();
    var _PlayPause3 = _interopRequireDefault(_PlayPause2);
    var _CurrentTime2 = require_CurrentTime();
    var _CurrentTime3 = _interopRequireDefault(_CurrentTime2);
    var _Progress2 = require_Progress();
    var _Progress3 = _interopRequireDefault(_Progress2);
    var _SeekBar2 = require_SeekBar();
    var _SeekBar3 = _interopRequireDefault(_SeekBar2);
    var _Duration2 = require_Duration();
    var _Duration3 = _interopRequireDefault(_Duration2);
    var _MuteUnmute2 = require_MuteUnmute();
    var _MuteUnmute3 = _interopRequireDefault(_MuteUnmute2);
    var _Volume2 = require_Volume();
    var _Volume3 = _interopRequireDefault(_Volume2);
    var _Fullscreen2 = require_Fullscreen();
    var _Fullscreen3 = _interopRequireDefault(_Fullscreen2);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.PlayPause = _PlayPause3.default;
    exports.CurrentTime = _CurrentTime3.default;
    exports.Progress = _Progress3.default;
    exports.SeekBar = _SeekBar3.default;
    exports.Duration = _Duration3.default;
    exports.MuteUnmute = _MuteUnmute3.default;
    exports.Volume = _Volume3.default;
    exports.Fullscreen = _Fullscreen3.default;
  }
});

// node_modules/react-media-player/lib/utils/keyboard-controls.js
var require_keyboard_controls = __commonJS({
  "node_modules/react-media-player/lib/utils/keyboard-controls.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = keyboardControls;
    var MEDIA_KEYS = [0, "f", "j", "k", "l", ",", ".", " ", "Home", "End", "ArrowLeft", "ArrowTop", "ArrowRight", "ArrowDown"];
    function keyboardControls(mediaProps, e) {
      var duration = mediaProps.duration, playPause = mediaProps.playPause, seekTo = mediaProps.seekTo, skipTime = mediaProps.skipTime, addVolume = mediaProps.addVolume, fullscreen = mediaProps.fullscreen;
      var key = e.key, shiftKey = e.shiftKey;
      MEDIA_KEYS.some(function(_key) {
        return _key === key && e.preventDefault();
      });
      switch (key) {
        case " ":
        case "k":
          playPause();
          break;
        case "ArrowLeft":
          skipTime(shiftKey ? -10 : -5);
          break;
        case "j":
          skipTime(shiftKey ? -10 : -5);
          break;
        case ",":
          skipTime(-1);
          break;
        case "ArrowRight":
          skipTime(shiftKey ? 10 : 5);
          break;
        case "l":
          skipTime(shiftKey ? 10 : 5);
          break;
        case ".":
          skipTime(1);
          break;
        case 0:
        case "Home":
          seekTo(0);
          break;
        case "End":
          seekTo(duration);
          break;
        case "ArrowUp":
          addVolume(shiftKey ? 10 : 5);
          break;
        case "ArrowDown":
          addVolume(shiftKey ? -10 : -5);
          break;
        case "f":
          fullscreen();
          break;
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-media-player/lib/utils/index.js
var require_utils = __commonJS({
  "node_modules/react-media-player/lib/utils/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.keyboardControls = exports.getVendor = exports.formatTime = void 0;
    var _formatTime2 = require_format_time();
    var _formatTime3 = _interopRequireDefault(_formatTime2);
    var _getVendor2 = require_get_vendor();
    var _getVendor3 = _interopRequireDefault(_getVendor2);
    var _keyboardControls2 = require_keyboard_controls();
    var _keyboardControls3 = _interopRequireDefault(_keyboardControls2);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.formatTime = _formatTime3.default;
    exports.getVendor = _getVendor3.default;
    exports.keyboardControls = _keyboardControls3.default;
  }
});

// node_modules/react-media-player/lib/react-media-player.js
var require_react_media_player = __commonJS({
  "node_modules/react-media-player/lib/react-media-player.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.utils = exports.controls = exports.withMediaProps = exports.Player = exports.Media = void 0;
    var _Media2 = require_Media();
    var _Media3 = _interopRequireDefault(_Media2);
    var _Player2 = require_Player();
    var _Player3 = _interopRequireDefault(_Player2);
    var _withMediaProps2 = require_with_media_props();
    var _withMediaProps3 = _interopRequireDefault(_withMediaProps2);
    var _controls2 = require_controls();
    var _controls = _interopRequireWildcard(_controls2);
    var _utils2 = require_utils();
    var _utils = _interopRequireWildcard(_utils2);
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key))
              newObj[key] = obj[key];
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.Media = _Media3.default;
    exports.Player = _Player3.default;
    exports.withMediaProps = _withMediaProps3.default;
    exports.controls = _controls;
    exports.utils = _utils;
  }
});
export default require_react_media_player();
//# sourceMappingURL=react-media-player.js.map
